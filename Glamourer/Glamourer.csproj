<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
		<TargetFramework>net5.0-windows</TargetFramework>
		<LangVersion>preview</LangVersion>
    <PlatformTarget>x64</PlatformTarget>
		<RootNamespace>Glamourer</RootNamespace>
		<AssemblyName>Glamourer</AssemblyName>
		<FileVersion>0.1.0.1</FileVersion>
    <AssemblyVersion>0.1.0.1</AssemblyVersion>
		<Company>SoftOtter</Company>
    <Product>Glamourer</Product>
    <Copyright>Copyright © 2020</Copyright>
		<Deterministic>true</Deterministic>
		<OutputType>Library</OutputType>
		<WarningLevel>4</WarningLevel>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<Nullable>enable</Nullable>
		<OutputPath>bin\$(Configuration)\</OutputPath>
		<MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);MSB3277</MSBuildWarningsAsMessages>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
		<DebugSymbols>true</DebugSymbols>
		<DebugType>full</DebugType>
		<Optimize>false</Optimize>
		<DefineConstants>DEBUG;TRACE</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
		<DebugType>pdbonly</DebugType>
		<Optimize>true</Optimize>
		<DefineConstants>TRACE</DefineConstants>
	</PropertyGroup>

	<PropertyGroup>
		<RunPostBuildEvent>OnOutputUpdated</RunPostBuildEvent>
	</PropertyGroup>

	<ItemGroup>
	  <None Remove="LegacyTattoo.raw" />
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Include="LegacyTattoo.raw" />
	</ItemGroup>

	<ItemGroup>
		<Reference Include="Dalamud">
			<HintPath>$(appdata)\XIVLauncher\addon\Hooks\dev\Dalamud.dll</HintPath>
      <Private>False</Private>
		</Reference>
		<Reference Include="ImGui.NET">
			<HintPath>$(appdata)\XIVLauncher\addon\Hooks\dev\ImGui.NET.dll</HintPath>
      <Private>False</Private>
		</Reference>
		<Reference Include="ImGuiScene">
			<HintPath>$(appdata)\XIVLauncher\addon\Hooks\dev\ImGuiScene.dll</HintPath>
      <Private>False</Private>
		</Reference>
		<Reference Include="SDL2-CS">
			<HintPath>$(appdata)\XIVLauncher\addon\Hooks\dev\SDL2-CS.dll</HintPath>
      <Private>False</Private>
		</Reference>
    <Reference Include="Lumina">
			<HintPath>$(appdata)\XIVLauncher\addon\Hooks\dev\Lumina.dll</HintPath>
      <Private>False</Private>
		</Reference>
    <Reference Include="Lumina.Excel">
			<HintPath>$(appdata)\XIVLauncher\addon\Hooks\dev\Lumina.Excel.dll</HintPath>
      <Private>False</Private>
		</Reference>
  </ItemGroup>

	<ItemGroup>
		<PackageReference Include="Newtonsoft.Json" Version="12.0.3">
      <Private>false</Private>
    </PackageReference>

    <PackageReference Include="System.Memory" Version="4.5.3" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\Glamourer.GameData\Glamourer.GameData.csproj" />
	  <ProjectReference Include="..\..\Penumbra\Penumbra.GameData\Penumbra.GameData.csproj" />
	  <ProjectReference Include="..\..\Penumbra\Penumbra.PlayerWatch\Penumbra.PlayerWatch.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="Properties\Resources.Designer.cs">
	    <DesignTime>True</DesignTime>
	    <AutoGen>True</AutoGen>
	    <DependentUpon>Resources.resx</DependentUpon>
	  </Compile>
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Update="Properties\Resources.resx">
	    <Generator>ResXFileCodeGenerator</Generator>
	    <LastGenOutput>Resources.Designer.cs</LastGenOutput>
	  </EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
	  <None Update="Glamourer.json">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </None>
	</ItemGroup>
	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
	  <Exec Command="if $(Configuration) == Release powershell Compress-Archive -Force $(TargetPath), $(TargetDir)$(SolutionName).json, $(TargetDir)$(SolutionName).GameData.dll, $(TargetDir)Penumbra.GameData.dll, $(TargetDir)Penumbra.PlayerWatch.dll $(SolutionDir)$(SolutionName).zip" />
	  <Exec Command="if $(Configuration) == Release powershell Copy-Item -Force $(TargetDir)$(SolutionName).json -Destination $(SolutionDir)" />
	</Target>
</Project>